/* EGR */

#include <hw_types.h>
#include <uartStdio.h>
#include <interrupt.h>
#include <soc_AM335x.h>
#include <hw_gpio_v2.h>
#include "EGR_Cape.h"
#include "delay_ms.h"
#include "Conf_mod.h"
#include "GPIO.h"

volatile int hBruecke1_1 = 0 ;
volatile int hBruecke1_2 = 0 ;
volatile int hBruecke2_1 = 0 ;
volatile int hBruecke2_2 = 0 ;

void myGPIOI1sr(){
//	UARTprintf("1\n") ;

	hBruecke1_1 = 1 ;
	hBruecke1_2 = 0 ;
	hBruecke2_1 = 0 ;
	hBruecke2_2 = 1 ;

	//interrupt loeschen
	HWREG(SOC_GPIO_2_REGS + GPIO_IRQSTATUS(0)) |= (1<<GPIO_PORT1_PIN2) ;
}

void myGPIOI2sr(){
//	UARTprintf("2\n") ;

	hBruecke1_1 = 0 ;
	hBruecke1_2 = 1 ;
	hBruecke2_1 = 1 ;
	hBruecke2_2 = 0 ;

	//interrupt loeschen
	HWREG(SOC_GPIO_2_REGS + GPIO_IRQSTATUS(1)) |= (1<<GPIO_PORT1_PIN4) ;
}

int main() {

	//Taster & Pullup
	PinMuxing(CONF_PORT1_PIN2, PULL_ENABLE, PULL_UP, 7) ;
	PinMuxing(CONF_PORT1_PIN4, PULL_ENABLE, PULL_UP, 7) ;

	//Taster Als Input
	EGR_GPIODirSet(GPIO_PORT1_PIN2_MODUL, GPIO_PORT1_PIN2, 1) ;
	EGR_GPIODirSet(GPIO_PORT1_PIN4_MODUL, GPIO_PORT1_PIN4, 1) ;

	//HBruecken
	PinMuxing(CONF_H_BRUECKE_MOTOR1_1, PULL_DISABLE, 0, GPIO_MODE) ;
	PinMuxing(CONF_H_BRUECKE_MOTOR1_2, PULL_DISABLE, 0, GPIO_MODE) ;
	PinMuxing(CONF_H_BRUECKE_MOTOR2_1, PULL_DISABLE, 0, GPIO_MODE) ;
	PinMuxing(CONF_H_BRUECKE_MOTOR2_1, PULL_DISABLE, 0, GPIO_MODE) ;

	//HBruecken als output
	EGR_GPIODirSet(GPIO_H_BRUECKE_MOTOR1_1_MODUL, GPIO_H_BRUECKE_MOTOR1_1,0) ;
	EGR_GPIODirSet(GPIO_H_BRUECKE_MOTOR1_2_MODUL, GPIO_H_BRUECKE_MOTOR1_2,0) ;
	EGR_GPIODirSet(GPIO_H_BRUECKE_MOTOR2_1_MODUL, GPIO_H_BRUECKE_MOTOR2_1,0) ;
	EGR_GPIODirSet(GPIO_H_BRUECKE_MOTOR2_2_MODUL, GPIO_H_BRUECKE_MOTOR2_2,0) ;

	while (1)
	{
		/* Place main loop code here */
	}
	return 0;
}
